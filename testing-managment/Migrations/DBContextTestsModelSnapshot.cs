// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using testing_managment.Data;

#nullable disable

namespace testingmanagment.Migrations
{
    [DbContext(typeof(DBContextTests))]
    partial class DBContextTestsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("testing_managment.Models.Entities.CaseInBlock", b =>
                {
                    b.Property<Guid>("Case")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Applicable")
                        .HasColumnType("boolean");

                    b.Property<Guid>("Block")
                        .HasColumnType("uuid");

                    b.Property<string>("TestReportComment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Verdict")
                        .HasColumnType("integer");

                    b.HasKey("Case");

                    b.ToTable("CaseInBlock");
                });

            modelBuilder.Entity("testing_managment.Models.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("testing_managment.Models.Entities.Dut", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("Company")
                        .HasColumnType("uuid");

                    b.Property<int>("Firmware_Version")
                        .HasColumnType("integer");

                    b.Property<int>("Hardmware_Version")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Type")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Dut");
                });

            modelBuilder.Entity("testing_managment.Models.Entities.TestBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateOnly>("Deadline")
                        .HasColumnType("date");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TestEngineer")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TestGroup")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TestProgram")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("TestBlock");
                });

            modelBuilder.Entity("testing_managment.Models.Entities.TestProgram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("Dut")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("ProjectNumber")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<Guid>("TestInitiator")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("TestProgram");
                });
#pragma warning restore 612, 618
        }
    }
}
